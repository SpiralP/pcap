(function() {var implementors = {};
implementors["pcap"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Linktype","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Packet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Precision","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inactive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Active","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dead","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for Capture&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimestampType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Savefile","synthetic":true,"types":[]}];
implementors["pcap_sys"] = [{"text":"impl RefUnwindSafe for timeval","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bpf_program","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bpf_insn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _IO_marker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _IO_FILE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_dumper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_file_header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_pkthdr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_stat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_if","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pcap_addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for sockaddr","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()